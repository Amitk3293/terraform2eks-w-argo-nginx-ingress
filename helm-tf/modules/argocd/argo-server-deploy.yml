apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-cd-argocd-server
  namespace: argo-cd
  uid: 9041daac-b58d-431b-b92a-d6e7553a25ae
  resourceVersion: '7770'
  generation: 1
  creationTimestamp: '2022-03-06T18:53:40Z'
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.2.5
    helm.sh/chart: argo-cd-3.35.2
  annotations:
    deployment.kubernetes.io/revision: '1'
    meta.helm.sh/release-name: argo-cd
    meta.helm.sh/release-namespace: argo-cd
  managedFields:
    - manager: terraform-provider-helm_v2.4.1_x5
      operation: Update
      apiVersion: apps/v1
      time: '2022-03-06T18:53:40Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:meta.helm.sh/release-name': {}
            'f:meta.helm.sh/release-namespace': {}
          'f:labels':
            .: {}
            'f:app.kubernetes.io/component': {}
            'f:app.kubernetes.io/instance': {}
            'f:app.kubernetes.io/managed-by': {}
            'f:app.kubernetes.io/name': {}
            'f:app.kubernetes.io/part-of': {}
            'f:app.kubernetes.io/version': {}
            'f:helm.sh/chart': {}
        'f:spec':
          'f:progressDeadlineSeconds': {}
          'f:replicas': {}
          'f:revisionHistoryLimit': {}
          'f:selector': {}
          'f:strategy':
            'f:rollingUpdate':
              .: {}
              'f:maxSurge': {}
              'f:maxUnavailable': {}
            'f:type': {}
          'f:template':
            'f:metadata':
              'f:labels':
                .: {}
                'f:app.kubernetes.io/component': {}
                'f:app.kubernetes.io/instance': {}
                'f:app.kubernetes.io/managed-by': {}
                'f:app.kubernetes.io/name': {}
                'f:app.kubernetes.io/part-of': {}
                'f:app.kubernetes.io/version': {}
                'f:helm.sh/chart': {}
            'f:spec':
              'f:containers':
                'k:{"name":"server"}':
                  .: {}
                  'f:command': {}
                  'f:image': {}
                  'f:imagePullPolicy': {}
                  'f:livenessProbe':
                    .: {}
                    'f:failureThreshold': {}
                    'f:httpGet':
                      .: {}
                      'f:path': {}
                      'f:port': {}
                      'f:scheme': {}
                    'f:initialDelaySeconds': {}
                    'f:periodSeconds': {}
                    'f:successThreshold': {}
                    'f:timeoutSeconds': {}
                  'f:name': {}
                  'f:ports':
                    .: {}
                    'k:{"containerPort":8080,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:name': {}
                      'f:protocol': {}
                  'f:readinessProbe':
                    .: {}
                    'f:failureThreshold': {}
                    'f:httpGet':
                      .: {}
                      'f:path': {}
                      'f:port': {}
                      'f:scheme': {}
                    'f:initialDelaySeconds': {}
                    'f:periodSeconds': {}
                    'f:successThreshold': {}
                    'f:timeoutSeconds': {}
                  'f:resources': {}
                  'f:terminationMessagePath': {}
                  'f:terminationMessagePolicy': {}
                  'f:volumeMounts':
                    .: {}
                    'k:{"mountPath":"/app/config/server/tls"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                    'k:{"mountPath":"/app/config/ssh"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                    'k:{"mountPath":"/app/config/tls"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                    'k:{"mountPath":"/home/argocd"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                    'k:{"mountPath":"/tmp"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
              'f:dnsPolicy': {}
              'f:restartPolicy': {}
              'f:schedulerName': {}
              'f:securityContext': {}
              'f:serviceAccount': {}
              'f:serviceAccountName': {}
              'f:terminationGracePeriodSeconds': {}
              'f:volumes':
                .: {}
                'k:{"name":"argocd-repo-server-tls"}':
                  .: {}
                  'f:name': {}
                  'f:secret':
                    .: {}
                    'f:defaultMode': {}
                    'f:items': {}
                    'f:optional': {}
                    'f:secretName': {}
                'k:{"name":"plugins-home"}':
                  .: {}
                  'f:emptyDir': {}
                  'f:name': {}
                'k:{"name":"ssh-known-hosts"}':
                  .: {}
                  'f:configMap':
                    .: {}
                    'f:defaultMode': {}
                    'f:name': {}
                  'f:name': {}
                'k:{"name":"static-files"}':
                  .: {}
                  'f:emptyDir': {}
                  'f:name': {}
                'k:{"name":"tls-certs"}':
                  .: {}
                  'f:configMap':
                    .: {}
                    'f:defaultMode': {}
                    'f:name': {}
                  'f:name': {}
                'k:{"name":"tmp-dir"}':
                  .: {}
                  'f:emptyDir': {}
                  'f:name': {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: apps/v1
      time: '2022-03-06T18:54:01Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:deployment.kubernetes.io/revision': {}
        'f:status':
          'f:availableReplicas': {}
          'f:conditions':
            .: {}
            'k:{"type":"Available"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Progressing"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:observedGeneration': {}
          'f:readyReplicas': {}
          'f:replicas': {}
          'f:updatedReplicas': {}
  selfLink: /apis/apps/v1/namespaces/argo-cd/deployments/argo-cd-argocd-server
status:
  observedGeneration: 1
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
  conditions:
    - type: Available
      status: 'True'
      lastUpdateTime: '2022-03-06T18:54:01Z'
      lastTransitionTime: '2022-03-06T18:54:01Z'
      reason: MinimumReplicasAvailable
      message: Deployment has minimum availability.
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2022-03-06T18:54:01Z'
      lastTransitionTime: '2022-03-06T18:53:40Z'
      reason: NewReplicaSetAvailable
      message: >-
        ReplicaSet "argo-cd-argocd-server-54bdd65cc4" has successfully
        progressed.
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: argo-cd
      app.kubernetes.io/name: argocd-server
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: argo-cd
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: argocd-server
        app.kubernetes.io/part-of: argocd
        app.kubernetes.io/version: v2.2.5
        helm.sh/chart: argo-cd-3.35.2
    spec:
      volumes:
        - name: static-files
          emptyDir: {}
        - name: tmp-dir
          emptyDir: {}
        - name: ssh-known-hosts
          configMap:
            name: argocd-ssh-known-hosts-cm
            defaultMode: 420
        - name: tls-certs
          configMap:
            name: argocd-tls-certs-cm
            defaultMode: 420
        - name: argocd-repo-server-tls
          secret:
            secretName: argocd-repo-server-tls
            items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
            defaultMode: 420
            optional: true
        - name: plugins-home
          emptyDir: {}
      containers:
        - name: server
          image: 'quay.io/argoproj/argocd:v2.2.5'
          command:
            - argocd-server
            - '--staticassets'
            - /shared/app
            - '--repo-server'
            - 'argo-cd-argocd-repo-server:8081'
            - '--dex-server'
            - 'http://argo-cd-argocd-dex-server:5556'
            - '--logformat'
            - text
            - '--loglevel'
            - info
            - '--redis'
            - 'argo-cd-argocd-redis:6379'
            - '--insecure'
          ports:
            - name: server
              containerPort: 8080
              protocol: TCP
          resources: {}
          volumeMounts:
            - name: ssh-known-hosts
              mountPath: /app/config/ssh
            - name: tls-certs
              mountPath: /app/config/tls
            - name: argocd-repo-server-tls
              mountPath: /app/config/server/tls
            - name: plugins-home
              mountPath: /home/argocd
            - name: tmp-dir
              mountPath: /tmp
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: argocd-server
      serviceAccount: argocd-server
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 5
  progressDeadlineSeconds: 600

